"Vimrc direct from the Vundle README page
" Will add other stuff after getting it working

set nocompatible              " be iMproved, required
filetype off                  " required

set rtp+=~/.vim/bundle/Vundle.vim  " set the RunTimePath=rtp to include Vundle & initialize
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
"call vundle#begin('~/some/path/here')

Plugin 'VundleVim/Vundle.vim'  " let Vundle manage Vundle, required

" Keep Plugin commands between vundle#begin/end.
Plugin 'tpope/vim-fugitive'  " vim-fugitive plugin on GitHub repo
" Plugin 'L9' " plugin from http://vim-scripts.org/vim/scripts.html
Plugin 'git://git.wincent.com/command-t.git' " Command-t Repo
Plugin 'Syntastic'  " Syntastic Plugin for Vim Syntax Hilighting
" git repos on your local machine (i.e. when working on your own plugin)
" Plugin 'file:///home/gmarik/path/to/plugin'
Plugin 'Valloric/YouCompleteMe' " YCM Install or Valloric/YouCompleteMe
Plugin 'vim-airline/vim-airline' " Statusline Plugin leaner than Powerline great with Vundle
Plugin 'ctrlpvim/ctrlp.vim' " 2 choices kien/ctrlp or this one from Repo
Plugin 'flazz/vim-colorschemes' " Color Schemes listed below to select
Plugin 'vim-airline/vim-airline-themes' " Schemes for vim-airline

" All of your Plugins must be added before the following line
call vundle#end()            " required
filetype plugin indent on    " required
" To ignore plugin indent changes, instead use:
"filetype plugin on

" Brief Vundle help
" :PluginList       - lists configured plugins
" :PluginInstall    - installs plugins; append `!` to update or just :PluginUpdate
" :PluginSearch foo - searches for foo; append `!` to refresh local cache
" :PluginClean      - confirms removal of unused plugins; append `!` to auto-approve removal
" see :h vundle for more details or wiki for FAQ
" Put your non-Plugin stuff after this line

set encoding=utf-8 nobomb
set nomodeline
set clipboard=unnamed
set wildmode=longest,list  " Bash-style tab completion At command line, complete longest common string, then list alternatives
set wildmenu

" Turn off saves swaps but also wipes out history undos counts????
set noswapfile  " No swap files
set nowritebackup
set nobackup
set viminfo=  " don't use or save viminfo files
" set history=2000000  " I will never really do this
" set undolevels=1000  " 1000 undos
" set updatecount=100  " switch every 100 chars

set laststatus=2  " Always show a status line even if only 1 window
set ignorecase  " Default to using case insensitive searches
set smartcase  " if search has Capital letter be sensitive to that
set smarttab  " Handle tabs more intelligently
set hlsearch  "Highlight searches by default
set incsearch  " Incrementally search while typing a /regex
set ruler  " Set ruler
set magic

" set cursorline  " highlight cursor line same as below ???
set cul  " highlight current line
hi CursorLine term=none cterm=none ctermbg=3  " adjust color

" These 2 number line commands can both be on off or vary
" See  http://vim.wikia.com/wiki/Display_line_numbers 
set number " Show line numbers 
set relativenumber  " Display numbers relative to cursor line

" Some Column stuff I need to evaluate
" Goal is auto to set the netrw column as half width
set colorcolumn=81  " 80-column line
highlight! link ColorColumn CursorColumn " 1st time to see this link notation
set cursorcolumn

syntax on
set synmaxcol=2048  " Syntax coloring too-long lines is slow????
set showmode
set showmatch  " Show matching brackets
set showcmd " Display incomplete command low R corner Vim window as I type
set scrolloff=5  " when scrolling, keep cursor 5 lines away from screen border
set sidescroll=1  " Also for side scrolling
set sidescrolloff=15
set nostartofline  " Cursor movement doesn't auto go to BOL
set shortmess+=a  " Use [+]/[RO]/[w] for modified/readonly/written
set confirm  " Y-N-C prompt if closing with unsaved changes
set autochdir  " Change to DIR of the file you just opened say you used a filepath

set term=xterm-256color  "Some color schemes need these 3 lines
set t_Co=256
syntax enable

set mouse-=a   " Disable mouse
set mousehide  " Hide mouse after chars typed

set novisualbell  " No blinking
set noerrorbells  " No noise I hope no CLUNK!
set vb t_vb= " disable any beeps or flashes on error
set visualbell  " Use visual bell instead of beeping when doing something wrong

" set backspace=2  " Fix Delete (backspace) on Mac OS X but seems fine to me

" Looking for a way to open a shell console when only Vim windows open
set ttyfast                   " we have a fast terminal
set shell=bash

set fileformats=unix,dos,mac    " support all three newline formats

set splitbelow
set splitright
"split navigations
nnoremap <C-J> <C-W><C-J>
nnoremap <C-K> <C-W><C-K>
nnoremap <C-L> <C-W><C-L>
nnoremap <C-H> <C-W><C-H>

" Flazz Color Choices
" colorscheme wombat
" colorscheme molokai
" colorscheme elflord
" colorscheme zenburn
" colorscheme morning
" colorscheme desert
" colorscheme evening
" colorscheme pablo
" colorscheme peachpuff
" colorscheme desert256
" colorscheme breeze
" colorscheme morning
" colorscheme darkblue
" colorscheme gothic
" colorscheme aqua
" colorscheme earth
" colorscheme slate
" colorscheme torte
" colorscheme delek
" colorscheme murphy
" colorscheme koehler
" colorscheme relaxedgreen
" colorscheme darkblack
" colorscheme chocolateliquor
" colorscheme less
" colorscheme impact
" colorscheme motus
" colorscheme freya
" colorscheme black_angus
" colorscheme badwolf
" colorscheme jellybeans
" colorscheme laederon
" colorscheme bubblegum
" colorscheme ubaryd
" colorscheme tomorrow
" colorscheme base16
" colorscheme murmur
" colorscheme sol
" colorscheme papercolor
" colorscheme distinguished
" colorscheme behelit
" colorscheme dark
" colorscheme durant
" colorscheme hybridline
" colorscheme hybrid
" colorscheme kalisi
" colorscheme light
" colorscheme lucius
" colorscheme luna
" colorscheme monochrome
" colorscheme powerlineish
" colorscheme raven
" colorscheme serene
" colorscheme silver
" colorscheme simple
" colorscheme term
" colorscheme understated
" colorscheme ir_black
" colorscheme peaksea

" colorscheme inkpot
" colorscheme kolor
" colorscheme railscasts
colorscheme candycode

" Vim-Airline
let g:airline_left_alt_sep=''
let g:airline_right_alt_sep=''
let g:airline_section_a='' " mode
let g:airline_section_b='' " branch
let g:airline_section_z='' " ruler
let g:airline_theme='kolor'

" Solarized Color Scheme & settings to consider -try dark or light bg
" set background=dark
" colorscheme solarized

" Vividchalk Colorscheme & settings to consider -try dark or light bg
" set background=light
" colorscheme vividchalk

" CTRL-P Options
" let g:ctrlp_map = '<c-p>' " 15 lines of CtrlP Options
" let g:ctrlp_cmd = 'CtrlP'
let g:ctrlp_working_path_mode = 'ra' " If no DIR specified default to local cwd
set wildignore+=*/tmp/*,*.so,*.swp,*.zip     " MacOSX/Linux -Next 7 some file types not to bother with
" set wildignore+=*\\tmp\\*,*.swp,*.zip,*.exe  " Windows
let g:ctrlp_custom_ignore = '\v[\/]\.(git|hg|svn)$'
let g:ctrlp_custom_ignore = {
  \ 'dir': '\v[\/]\.(git|hg|svn)$',
  \ 'file': '\v\.(exe|so|dll)$',
  \ 'link': 'some_bad_symbolic_links',
  \ }
let g:ctrlp_user_command = 'find %s -type f'        " MacOSX/Linux -custom file listing commands
" let g:ctrlp_user_command = 'dir %s /-n /b /s /a-d'  " Windows
" let g:ctrlp_user_command = ['.git', 'cd %s && git ls-files -co --exclude-standard']
" For more Options try :help ctrlp-options for other options
let g:ctrlp_max_height = 100
let g:ctrlp_use_caching = 0
" let g:ctrlp_user_command = g:ag_binary . ' %s -l --nocolor -g ""'
" let g:ctrlp_working_path_mode = ''

" Netrw Settings
let g:netrw_liststyle=0         " thin (change to 3 for tree)
let g:netrw_banner=0            " no banner
let g:netrw_altv=1              " open files on right
let g:netrw_preview=1           " open previews vertically
" Netrw Settings Dr Chips Settings the Author of netrw!
" let g:netrw_altv          = 1
let g:netrw_fastbrowse    = 2
let g:netrw_keepdir       = 0
" let g:netrw_liststyle     = 2
let g:netrw_retmap        = 1
let g:netrw_silent        = 1
let g:netrw_special_syntax= 1

" Syntastic recommmends these settings as a first until used to it
set statusline+=%#warningmsg#
set statusline+=%{SyntasticStatuslineFlag()}
set statusline+=%*
let g:syntastic_always_populate_loc_list = 1
let g:syntastic_auto_loc_list = 1
let g:syntastic_check_on_open = 1
let g:syntastic_check_on_wq = 0

" set editing-mode vi " Vi inside Bash may not work like this on Mac OS X

" YouCompleteMe stuff here
let g:ycm_autoclose_preview_window_after_completion=1
map <leader>g  :YcmCompleter GoToDefinitionElseDeclaration<CR>
let g:ycm_global_ycm_extra_conf='~/.ycm_extra_conf.py'

" Command-T stuff to consider
" Plugin "git://git.wincent.com/command-t.git"
" let g:CommandTMatchWindowAtTop=1 " show window at top

" Python support to the end
let python_highlight_all=1
" Python tabs and indentation
au BufRead,BufNewFile *.py,*.pyw	set tabstop=4
au BufRead,BufNewFile *.py,*pyw 	set shiftwidth=4
au BufRead,BufNewFile *.py,*.pyw	set expandtab
au BufRead,BufNewFile *.py,*pyw		set softtabstop=4
au BufRead,BufNewFile *.py,*.pyw	set textwidth=79
au BufRead,BufNewFile *.py,*.pyw	set autoindent
au BufRead,BufNewFile *.py,*.pyw	set fileformat=unix
" Python workflow script not working
" au BufRead,BufNewFile *.py,*.pyw,*.c,*.h match BadWhitespace /\s\+$/
" js html css indents
au BufNewFile,BufRead *.js, *.html, *.css
    \ set tabstop=2
    \ set softtabstop=2
    \ set shiftwidth=2

"python with virtualenv support
py << EOF
import os
import sys
if 'VIRTUAL_ENV' in os.environ:
	project_base_dir = os.environ['VIRTUAL_ENV']
	activate_this = os.path.join(project_base_dir, 'bin/activate_this.py')
	execfile(activate_this, dict(__file__ = activate_this))
EOF

" Load up virtualenv's vimrc if it exists
if filereadable($VIRTUAL_ENV . '/.vimrc')
	source $VIRTUAL_ENV/.vimrc
endif

